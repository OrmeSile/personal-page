name: Deploy Next.js Docker image to private VPS
on:
  push:
    branches: ["main"]
  workflow_dispatch:

concurrency:
  group: "docker-ssh"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    environment: docker-ssh
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t nextjs-portfolio:latest .

      - name: Save Docker image as tar file
        run: docker save -o nextjs-portfolio.tar nextjs-portfolio:latest

      - name: Transfer Docker image to remote server
        run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            scp -P ${{ secrets.REMOTE_SERVER_PORT }} -o StrictHostKeyChecking=no nextjs-portfolio.tar ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }}:${{ secrets.REMOTE_SERVER_PATH }}
      - name: Stop current container
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }} ${{ secrets.REMOTE_SERVER_PORT }} << 'ENDSSH'
          docker stop $(docker ps -a -q)
          ENDSSH
      - name: Load Docker image on remote server
        run: |
            ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_SERVER_ROOT }}@${{ secrets.REMOTE_SERVER_ADDRESS }} -p ${{ secrets.REMOTE_SERVER_PORT }} << 'ENDSSH'
            docker load -i ${{ secrets.REMOTE_SERVER_PATH }}/nextjs-portfolio.tar
            ENDSSH
      - name: Run docker Container on remote server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_SERVER_USERNAME }}@${{ secrets.REMOTE_SERVER_ADDRESS }} -p ${{ secrets.REMOTE_SERVER_PORT }} << 'ENDSSH'
          docker run -d nextjs-portfolio
          ENDSSH